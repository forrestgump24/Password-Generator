**
 * Randomly generate passwords.
 *
 * @author APCS Team
 * @version FLVS 2021
 *
 */
import java.io.IOException;
import java.io.PrintWriter;
import java.io.File;
import java.util.Scanner;
import java.util.Random;

public class SecretPasscode
{
    public static void main(String [] args) throws IOException
    {
        int pwLength = 0;
        int randNum = 0;
        /*This was kinda confusing to create, but
         we are setting an integer variable that can cycle through 1-4 options (representing lower, upper, #'s, punctuation)
         and if one of those is picked, a loop will add a random character from the string list which is picked by randomNumber by the string's length
         */
        int loopSelection = 0;
        Random randomNumber = new Random();
        Random randomSelection = new Random();
        String userChoice = "";
        String password = "";
        String passwordLowercase = "abcdefghijklmnopqrstuvwyxz";
        String passwordUppercase = "ABCDEFGHIJKLMNOPQRSTUVWYXZ";
        String passwordNumbers = "1234567890";
        String passwordPunctuation = "~`! @#$%^&*()_-+={[}]|:;<,>.?/\"\\";

        // initialize scanner and print writer
        Scanner in = new Scanner(System.in);
        PrintWriter outFile = new PrintWriter(new File("password.txt"));

        System.out.println("**********************************************************");
        System.out.println("Welcome to a simple password generator. \nThe password will include lowercase, uppercase, & numbers.");
        // Ask for password length
        System.out.print("Enter a password length (6 or more): ");
        pwLength = in.nextInt();
        System.out.println();
        // validate password length
        if (pwLength < 6) {
            System.out.println("Password length too short, try again.");
            System.out.print("Enter a password length (6 or more): ");
            pwLength = in.nextInt();
        }
        else if (pwLength >= 6) {
            // generate a random character in the correct character set
            for (int i = 0; i < pwLength; i++) {
                loopSelection = randomSelection.nextInt(4);
                // concatenate the character to the password
                if (loopSelection == 0) {
                    password += passwordLowercase.charAt(randomNumber.nextInt(passwordLowercase.length()));
                }
                else if (loopSelection == 1) {
                    password += passwordUppercase.charAt(randomNumber.nextInt(passwordUppercase.length()));
                }
                else if (loopSelection == 2) {
                    password += passwordNumbers.charAt(randomNumber.nextInt(passwordNumbers.length()));
                }
                else if (loopSelection == 3) {
                    password += passwordPunctuation.charAt(randomNumber.nextInt(passwordPunctuation.length()));
                }
                }
            // writing password to the file
            outFile.println(password);
            System.out.print("A password has been written to the text file");
        }

        // the user wants to continue
        System.out.print("Would you like to generate another password? Y/N?");
        userChoice = in.nextLine();
        in.nextLine();
        do {
            // Ask for password length
            System.out.print("Enter a password length (6 or more): ");
            pwLength = in.nextInt();
            in.nextLine();
            System.out.println();
            // validate password length
            if (pwLength < 6) {
                System.out.println("Password length too short, try again.");
                System.out.print("Enter a password length (6 or more): ");
                pwLength = in.nextInt();
            }
            else if (pwLength >= 6) {
                // generate a random character in the correct character set
                for (int i = 0; i < pwLength; i++) {
                    loopSelection = randomSelection.nextInt(4);
                    // concatenate the character to the password
                    if (loopSelection == 0) {
                        password += passwordLowercase.charAt(randomNumber.nextInt(passwordLowercase.length()));
                    }
                    else if (loopSelection == 1) {
                        password += passwordUppercase.charAt(randomNumber.nextInt(passwordUppercase.length()));
                    }
                    else if (loopSelection == 2) {
                        password += passwordNumbers.charAt(randomNumber.nextInt(passwordNumbers.length()));
                    }
                    else if (loopSelection == 3) {
                        password += passwordPunctuation.charAt(randomNumber.nextInt(passwordPunctuation.length()));
                    }
                }
            }
            // writing password to the file
            outFile.println(password);
            System.out.print("A password has been written to the text file");
            // the user wants to continue
        } while(userChoice.toLowerCase() == "y");


        // when the user is done, close the text file so that it can be re-opened and read
        outFile.close();

        // Read passwords back from text file and display to the screen



    }//end main
}//end class

